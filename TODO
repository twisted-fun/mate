Fixes:
    ☐ Fix get_module_by_path function. Currently it matches with module_name, not with module's path
    ☐ Fix ambiguty between module's default handler's argument and module's inline submodule handler's name
    ☐ Fix help module. For example "help show all" doesn't show only that.

Tests:
    ☐ Create a test suite.

Plugins:
    ☐ Finding artifacts using target url or socket
        ☐ Writable directories or files used by process
        ☐ Readable sensitive config
        ☐ network or unix sockets listening
            ☐ Tell if any of the sockets are HTTP based
            ☐ Tell if any of the sockets are unauthenticated
    ☐ Finding issues in applications using python frameworks
        ☐ Authorization
        ☐ CSRF and CORS
        ☐ Command injection candidates
    ☐ Finding issues in applications using JS frameworks
    ☐ Finding issues in JAVA
        ☐ Enumerate all endpoints from code
        ☐ Sqli from mybatis
        ☐ Command injection candidates

Code:
    ✔ Add a basic plugin support @done(20-11-22 18:58)
    ✔ Implement mate_exception_handler and MateUndefined exception in utils to better propogate exceptions @done(20-11-22 19:01)
    ✔ Implement mate.modules.core classes to better maintain pluggability @done(20-11-22 19:04)
    ✔ Move plugin libraries to mate.libs @done(20-11-22 19:06)
    ✔ Add help module's support @done(20-11-23 00:35)
        ☐ Add support for printing detailed usage
        ✔ Parse help's description and usage details from docstring instead of current bs @done(20-11-24 03:32)
    ☐ Add docstring to each and everything
    ✔ Add inline submodule support @done(20-11-24 01:51)
    ☐ Don't catch all TypeError exceptions from execute(). Change it to something more robust.
    ☐ Forbid print statement in module's execution, instead make a powerful central print that executes whatever module returns.
    ✔ Remove "mate" root node in module's path, it's side effects make code hard to read. @done(20-11-23 19:02)
    ✔ Remove MateRecord Class and make all base commands subcommand of "mate" command. It will make things easy to implement. @done(20-11-23 03:36)
    ✔ Add ls, pwd, sh as default inline subcommands. @done(20-11-24 04:14)
    ☐ Create a documentation
        ☐ Core functions
        ☐ Inbuilt modules
        ☐ How to write plugins

Ideas:
    ✔ Add a prompt to mate interpreter @done(20-11-22 22:58)
        ✔ When previous command was successful: mate [+] > @done(20-11-21 18:47)
        ☐ When command is in progress: mate [*] >
        ✔ When previous command failed: mate [-] > @done(20-11-22 22:57)
    ☐ Add calculator similar to IDA Pro.
    ☐ Add nested command completion.
    ☐ Explore lru_cache decorator for performance gains.


Misc:
    ✔ Prepare project skeleton for first commit @done(20-11-21 02:00)

Archive:
✔ Changed structure of the project for robustness @done(20-11-22 19:00)
